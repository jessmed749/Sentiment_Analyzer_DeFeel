version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # internal listener (for containers)
      - "9093:9093"   # external listener (for host)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Two listeners: PLAINTEXT (internal) and EXTERNAL (host)
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  inference:
    build:
      context: ../services/inference    
      dockerfile: Dockerfile
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - RAW_TOPIC=events.raw
      - SCORED_TOPIC=events.scored
      - GROUP_ID=inference-v1
      - MODEL_PATH=distilbert-base-uncased-finetuned-sst-2-english
      - APP_ENV=dev
       - HF_HOME=/app/.hf_cache          
      - TRANSFORMERS_CACHE=/app/.hf_cache 
      - HF_HUB_DISABLE_TELEMETRY=1     
    ports:
      - "8000:8000"                     # API to host
    depends_on:
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s